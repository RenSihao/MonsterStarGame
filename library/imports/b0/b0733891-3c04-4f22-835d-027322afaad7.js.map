{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    //属性\n    properties: {\n        //跳跃高度\n        jumpHeight: 200,\n        //跳跃持续时间\n        jumpDuration: 0.5,\n        //最大移动速度\n        maxMoveSpeed: 400,\n        //加速度\n        accel: 1000,\n    },\n    \n    //跳跃动画\n    setJumpAction: function() {\n        //跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        //下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        //不断重复\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\n    },\n    \n    //移动控制\n    setInputControl: function() {\n        \n        var self = this;\n        \n        //添加键盘事件监听\n        cc.eventManager.addListener({\n            \n            event:cc.EventListener.KEYBOARD,\n            \n            //按键\n            onKeyPressed: function(keyCode, event) {\n                switch(keyCode) {\n                    case cc.KEY.a:\n                        self.accLeft = true;\n                        self.accRight = false;\n                        break;\n                    case cc.KEY.d:\n                        self.accLeft = false;\n                        self.accRight = true;\n                        break;\n                }\n            },\n            \n            //松键\n            onKeyReleased: function(keyCode, event) {\n                switch(keyCode) {\n                    case cc.KEY.a:\n                        self.accLeft = false;\n                        break;\n                    case cc.KEY.d:\n                        self.accRight = false;\n                        break;\n                }\n            }\n        }, self.node);\n        \n    },\n\n    //场景加载后立即启用\n    onLoad: function () {\n        \n        //初始化跳跃\n        this.jumpAction = this.setJumpAction();\n        this.node.runAction(this.jumpAction);\n        \n        //加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        \n        //当前水平方向速度\n        this.xSpeed = 0;\n        \n        //初始化键盘输入监听\n        this.setInputControl();\n\n    },\n\n    //场景加载后每帧调用一次，一般是经常计算的或者需要及时更新的逻辑\n    update: function (dt) {\n        //根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel*dt;\n        }\n        else if (this.accRight) {\n            this.xSpeed += this.accel*dt;\n        }\n        \n        //限制最大移动速度\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed)\n        }\n        \n        //根据当前速度更新位置\n        this.node.x += this.xSpeed*dt;\n        \n        //限制人物移动范围\n        if (this.node.x < Math.min(0,this.groundX) || this.node.x > Math.max(0,this.groundX)) {\n            this.node.x = 0;\n        }\n        \n    },\n});\n\n\n\n\n"
  ]
}